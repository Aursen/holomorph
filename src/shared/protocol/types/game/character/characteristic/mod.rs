use std::io::{Read, Write};
use io::Result;
use protocol::*;
use protocol::types::game::character::alignment::ActorExtendedAlignmentInformations;
impl_type!(CharacterBaseCharacteristic, 4, base| VarShort, additionnal| VarShort, objects_and_mount_bonus| VarShort, align_gift_bonus| VarShort, context_modif| VarShort);
impl_type!(CharacterCharacteristicsInformations, 8, experience| VarLong, experience_level_floor| VarLong, experience_next_level_floor| VarLong, kamas| i32, stats_points| VarShort, additionnal_points| VarShort, spells_points| VarShort, alignment_infos| ActorExtendedAlignmentInformations, life_points| VarInt, max_life_points| VarInt, energy_points| VarShort, max_energy_points| VarShort, action_points_current| VarShort, movement_points_current| VarShort, initiative| CharacterBaseCharacteristic, prospecting| CharacterBaseCharacteristic, action_points| CharacterBaseCharacteristic, movement_points| CharacterBaseCharacteristic, strength| CharacterBaseCharacteristic, vitality| CharacterBaseCharacteristic, wisdom| CharacterBaseCharacteristic, chance| CharacterBaseCharacteristic, agility| CharacterBaseCharacteristic, intelligence| CharacterBaseCharacteristic, range| CharacterBaseCharacteristic, summonable_creatures_boost| CharacterBaseCharacteristic, reflect| CharacterBaseCharacteristic, critical_hit| CharacterBaseCharacteristic, critical_hit_weapon| VarShort, critical_miss| CharacterBaseCharacteristic, heal_bonus| CharacterBaseCharacteristic, all_damages_bonus| CharacterBaseCharacteristic, weapon_damages_bonus_percent| CharacterBaseCharacteristic, damages_bonus_percent| CharacterBaseCharacteristic, trap_bonus| CharacterBaseCharacteristic, trap_bonus_percent| CharacterBaseCharacteristic, glyph_bonus_percent| CharacterBaseCharacteristic, permanent_damage_percent| CharacterBaseCharacteristic, tackle_block| CharacterBaseCharacteristic, tackle_evade| CharacterBaseCharacteristic, pa_attack| CharacterBaseCharacteristic, pm_attack| CharacterBaseCharacteristic, push_damage_bonus| CharacterBaseCharacteristic, critical_damage_bonus| CharacterBaseCharacteristic, neutral_damage_bonus| CharacterBaseCharacteristic, earth_damage_bonus| CharacterBaseCharacteristic, water_damage_bonus| CharacterBaseCharacteristic, air_damage_bonus| CharacterBaseCharacteristic, fire_damage_bonus| CharacterBaseCharacteristic, dodge_pa_lost_probability| CharacterBaseCharacteristic, dodge_pm_lost_probability| CharacterBaseCharacteristic, neutral_element_resist_percent| CharacterBaseCharacteristic, earth_element_resist_percent| CharacterBaseCharacteristic, water_element_resist_percent| CharacterBaseCharacteristic, air_element_resist_percent| CharacterBaseCharacteristic, fire_element_resist_percent| CharacterBaseCharacteristic, neutral_element_reduction| CharacterBaseCharacteristic, earth_element_reduction| CharacterBaseCharacteristic, water_element_reduction| CharacterBaseCharacteristic, air_element_reduction| CharacterBaseCharacteristic, fire_element_reduction| CharacterBaseCharacteristic, push_damage_reduction| CharacterBaseCharacteristic, critical_damage_reduction| CharacterBaseCharacteristic, pvp_neutral_element_resist_percent| CharacterBaseCharacteristic, pvp_earth_element_resist_percent| CharacterBaseCharacteristic, pvp_water_element_resist_percent| CharacterBaseCharacteristic, pvp_air_element_resist_percent| CharacterBaseCharacteristic, pvp_fire_element_resist_percent| CharacterBaseCharacteristic, pvp_neutral_element_reduction| CharacterBaseCharacteristic, pvp_earth_element_reduction| CharacterBaseCharacteristic, pvp_water_element_reduction| CharacterBaseCharacteristic, pvp_air_element_reduction| CharacterBaseCharacteristic, pvp_fire_element_reduction| CharacterBaseCharacteristic, spell_modifications| Vec<CharacterSpellModification>, probation_time| i32);
impl_type!(CharacterSpellModification, 215, modification_type| i8, spell_id| VarShort, value| CharacterBaseCharacteristic);
